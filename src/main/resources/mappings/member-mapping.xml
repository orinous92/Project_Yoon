<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MemberDAO">

	<!-- ADMIN 기능 -->

	<!-- 유저 리스트 -->
	<select id="userList" resultType="member">
		select * from member 
	</select>
	
	<!-- 유저 리스트 with paging -->
	<select id="getUserListWithPaging" parameterType="hashMap" resultType="member">
		<![CDATA[
		select
			userid, username, birthdate, email, phone, address, grade, regdate, useyn
		from
			( select
				rownum rn, userid, username, birthdate, email, phone, address, grade, regdate, useyn
			  from
			    member
			  where rownum <= #{cri.pageNum} * #{cri.amount} and userid like '%'||#{userid}||'%'
			)
		where rn > (#{cri.pageNum} - 1) * #{cri.amount}
		]]>
	</select>
	
	<!-- 유저 리스트 카운트 -->
	<select id="memberListCount" resultType="int" parameterType="String">
		select count(*)
			from member
			where userid like '%'||#{userid}||'%'
	</select>
	
	<!-- 유저 상세 정보 -->
	<select id="getUser" resultType="member">
		select * from member 
			where userid = #{userid}
	</select>
	
	<!-- 유저 아이디 탈퇴 사용 정지 -->
	<update id="deleteMember" parameterType="String">
		update member set useyn = 'n' 
			where userid = #{userid}
	</update>
	
	
	<!-- 사용자 기능 -->
	
	<!-- 로그인(signin)  -->
	<select id="signin" resultType="member">
		select * from member 
			where userid = #{userid}
			and password = #{password}
	</select>
	
	<!-- 로그인 : 아이디 찾기(findId) -->
	<select id="findUserId" parameterType="String" resultType="member">
		select * from member 
			where username = #{username} and email = #{email}
	</select>
	
	<!-- 로그인 : 비밀번호 찾기(findPwd) -->
	<select id="findUserPwd" parameterType="String" resultType="member">
		select * from member 
			where userid = #{userid} and username = #{username} and email = #{email}
	</select>
	
	<!-- 비밀번호 찾기 : 비밀번호 수정(upd_pwd) -->
	<update id="updpwd">
		update member set password = #{password} 
			where userid = #{userid}
	</update>

	
	<!-- 회원가입(signup) -->
	<insert id="signup">
		insert into member(userid, password, username, birthdate, email, phone, zipnum, address) 
			values(#{userid}, #{password}, #{username},#{birthdate}, #{email}, #{phone}, #{zipnum}, #{address})
	</insert>
	
	<!-- 회원가입(confirmId) -->
	<select id="confirmId" parameterType="String" resultType="member">
		select * from member where userid = #{userid}
	</select>
	
	
	
	<!-- 주소 찾기 ( like : 동 )  -->
	<select id="selectAddressByDong" parameterType="String" resultType="address">
		select /*+ INDEX_ASC(address pk_address) */ * from address where dong like '%'||#{dong}||'%'
	</select>
	<!-- Hint를 사용 -->
	<!-- select /*+ INDEX_ASC(address pk_address) */ * from address where dong like '%'||#{dong}||'%' -->
	
	
	<!-- 회원정보 수정 -->
	<update id="updateMember">
		update member 
			set username = #{username}, email = #{email}, address = #{address}
				where userid = #{userid}
	</update>
	
</mapper>
