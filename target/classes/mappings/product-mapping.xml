<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductDAO">
	
	<!-- 상품번호에 맞는 상품정보 얻어오기 -->
	<select id="getProduct" resultType="product">
		select * from product
			where pno = #{pno}
	</select>
	
	<!-- 신상품 목록 얻어오기 -->
	<select id="getNewProductList" resultType="product">
		select * from new_product_view
			order by pname
	</select>
	
	<!-- 상품 종류별 상품 목록 얻어오기 -->
	<select id="getProductListByCateName" resultType="product">
		select * from product
			where cateName = #{cateName} and useyn = 'y'
			order by pname
	</select>
	
		<!-- 상품조회  -->
	<select id="productView" resultType="product">
		select  pno, pname, cateName, price, inventory, pdesc, image, productdate 
			from product
            where pno = #{pno}
	</select>
	
	<!--  상품 등록   -->
	<insert id="register" parameterType="product">
		insert into product ( pno, pname,  cateName, price, inventory, pdesc, image) 
			values (product_seq.nextval, #{pname} , #{cateName}, #{price}, #{inventory}, #{pdesc}, #{image})
	</insert>
	
	<select id="productList" resultType="product">
		select 
			pno, pname, cateName, price, inventory, pdesc, image, productdate 
		from product
	</select>

	
	<!--  상품 목록 페이징처리 -->
	<select id="getListWithPaging" parameterType="hashMap" resultType="product">
		<![CDATA[
			select
				pno, image, pname, cateName, price, inventory, productdate, useyn
			from
				( select 
					rownum rn, pno, image, pname, cateName, price, inventory, productdate, useyn
				  from 
				    product 
				  where rownum <= #{cri.pageNum} * #{cri.amount} and pname like '%'||#{pname}||'%'
				)
			where rn > (#{cri.pageNum} - 1) * #{cri.amount}
		]]>
	</select>
	<!-- 상품 리스트 카운트 -->
	<select id="productListCount" resultType="int" parameterType="String">
			select count(*)
				from product
				where pname like '%'||#{pname}||'%' 
	</select>
	
	<!-- 상품 수정  -->
	<update id="updateProduct">
		update product 
			set 
				cateName = #{cateName},
				pname = #{pname},
				price = #{price},
				inventory = #{inventory},
				pdesc = #{pdesc},
				image = #{image},
				useyn = #{useyn}
			where pno = #{pno}
	</update>

	
	<!-- 삭제를 위한 상품 이미지 파일이름 select -->
	<select id="fileInfo" resultType="String">
		select image
			from product
			where pno = #{pno}
	</select>
	
	
	
</mapper>
